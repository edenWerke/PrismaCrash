// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init


generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


// one to one relation 
model User{
  id Int @id  @default(autoincrement())
  email String @unique
  name String @map("firstName")
  role Role? @default(User)
profile Profile?
 
  post Post[]
  @@map("users")

  @@unique([name,role])
  @@index([id,email])
}




model Profile{
  id Int @id @default(autoincrement())
  bio String
  userId Int @unique
  user User @relation(fields: [userId],references: [id])

 
}



model Post{
  id Int @id @default(autoincrement())
  authorId Int
  title String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  likeNum   Int @default(0)
  published Boolean @default(false)
  author User @relation(fields: [authorId],references: [id])
  catagories Catagory[]
}
// when we ceate many to many relation we dont need to rite @relation

model Catagory{
  id Int @id @default(autoincrement())
  name String 
  posts Post[]
}



// list of allowed options
enum Role{
  User
  ADMIN
}